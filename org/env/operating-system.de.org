* Betriebssystem
:PROPERTIES:
:EXPORT_FILE_NAME: operating-system.de.md
:EXPORT_HUGO_WEIGHT: 10
:END: 
Wir wollen für die Entwicklung von Open Source Sofware auch ebensolche einsetzen,
deshalb beschreiben wir das Vorgehen anhand von Linux. Wir benutzen Ubuntu, andere
Distributionen sollten sich ähnlich verhalten.
** Das Terminal
Früher hat man mit einem Rechner über ein Terminal kommuniziert. Das ist wie eine
Schreibmaschine mit Bildschirm. Man gibt Befehle ein und erhält eine Ausgabe auf
dem Bildschirm zurück. Wir werden diesem Konzept noch oft begegnen. Es ist wenn
man sich daran gewöhnt hat eine sehr flexible Art und Weise der Maschine
mitzuteilen, was man von ihr will. 

Der heutige Benutzer kennt oft nur die grafische Benutzerobefläche (GUI Graphical User Interface)
um mit Programmen auf dem Rechner zu kommunizieren. Wir benötigen aber ein Terminal
und verwenden ein Terminal-Emulations Programm welches uns in einem Fenster Ein- und Ausgabe
ermöglicht. Wir finden ein solches zB. im Menü ~Systemwerkzeuge -> QTerminal~.

Mit diesem Programm können wir sogar mehrere Terminal Sitzungen parallel geöffnet halten
(~<Ctrl+Shift+Tab>~ erzeugt eine zusätzliche Sitzung).

** Die Shell
Das Programm welches unsere Eingaben verwertet und uns wieder etwas zurück gibt wird als
Shell (Schale) bezeichnet. In unserem Fall ist das konkret die Bash (Bourne Again Shell)
welche meist standardmäßig konfiguriert ist.

Man sollte lernen wie man sich mit einfachen Befehlen im Dateisystem bewegt (~cd~),
Dateien kopieren (~cp~), löschen (~rm~), verschieben (~mv~) und anzeigen (~less~) kann.

Zu erwähnen ist das man die zuletzt eingegebenen Befehle mit der nach oben zeigenden Cursor Taste (Pfeil)
wieder hervor holen und auch verändern (editieren) kann. Desweiteren ist die Tabulator Taste
ein Wertvoller Gefährte, mit ihr kann man Befehle oder auch Dateinamen vervollständigen (completion).
Das spart viel Schreibarbeit und schützt vor Tippfehlern.

** Programme installieren
Für die Installation von Programmen, in diesem Kontext auch Pakete genannt werden wir 
Paket-Verwalter (Package Manager) wie ~apt~ und ~snap~ verwenden. Während ~apt~
Software Versionen anbietet die sich gut in die Linux Distribution einbinden so ist
es mit ~snap~ möglich auch neuere Versionen zu installieren was wir uns gegebenfalls
zu Nutzen machen werden.
